plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.16'
}

sourceCompatibility = 1.8

// 插件需要支持的 IntelliJ IDEA Community Edition平台版本
// 平台版本使用其 Branch_Number 作为区分
// 关于`Branch_Number`的更多细节，可参考 https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html
enum PlatformType {
    // Android Studio v3.5
    IC_191 ("191"),
    // Android Studio v3.6
    IC_192 ("192"),

    final String branchNumber

    PlatformType(String branchNumber) {
        this.branchNumber = branchNumber
    }

    String getBranchNumber() {
        return this.branchNumber
    }

    String toString(){
        "IC-" + branchNumber
    }
}

// 插件引擎版本号
// 关于其介绍，可看文档《flr_plugin_workflow》
// 该值在完成一个新引擎版本开发后，手动更新
String pluginEngineVersion = '1.0.0'

// 当前插件需要支持的平台版本
// 该值在切换到 platform-master 分支后，手动更新
PlatformType curPlatform = PlatformType.IC_192

// 插件产品版本号
// 关于其介绍，可看文档《flr_plugin_workflow》
//
// pluginProductVersion = #{branchNumber}.#{pluginEngineVersion}
// example: 192.1.0.0
String pluginProductVersion = curPlatform.branchNumber + '.' + pluginEngineVersion

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.26'
}

// See https://github.com/JetBrains/gradle-intellij-plugin#intellij-platform-properties
intellij {

    String platformVersion = null
    List platformPlugins = null

    switch (curPlatform) {
        // Config for Android Studio v3.5
        case PlatformType.IC_191:
            platformVersion = '2019.1.4'
            platformPlugins =  ['Dart:191.8593', 'io.flutter:43.0.1']
            break
        // Config for Android Studio v3.6
        case PlatformType.IC_192:
            platformVersion = '2019.2.4'
            platformPlugins = ['Dart:192.7761', 'io.flutter:43.0.2']
            break
    }

    assert(platformVersion != null && platformPlugins != null)

    version = platformVersion
    plugins = platformPlugins

    /*
    * Use this property if you want to test your plugin in any non-IDEA JetBrains IDE such as WebStorm or Android Studio.
    *
    * See https://github.com/JetBrains/gradle-intellij-plugin#rundebug-ide-properties
    * */
    //alternativeIdePath '/Applications/Android Studio.app'
}

// See https://github.com/JetBrains/gradle-intellij-plugin#patching-dsl
patchPluginXml {

    // 设置插件的版本号
    version = pluginProductVersion

    // 设置插件描述
    pluginDescription = """
<p>Flr (Flutter-R): A Flutter Resource Manager Android Studio Plugin, which can help flutter developer to auto specify assets in pubspec.yaml and generate r.g.dart file.</p>
<br>
<p>You can get more details from:</p>
<ul>
  <li><a href="https://github.com/Fly-Mix/flr-as-plugin">Flr GitHub Repository</a></li>
  <li><a href="https://plugins.jetbrains.com/plugin/13789-flr/">Flr Plugin Homepage</a></li>
</ul>
    """

    /*
    * 插件兼容IDEA的最小版本号和最大版本号
    * 详细可参考：
    * - https://github.com/JetBrains/gradle-intellij-plugin#patching-dsl
    * - http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html
    * */
    sinceBuild = curPlatform.branchNumber
    //untilBuild = '192.*'

    /*
    * 设置版本更新日志
    * 注意：最新版本号的标题样式改为h2，其他版本号的标题样式改为h3
    */
    changeNotes = """
<h1>PluginEngine Change Notes<h1>
<h2>1.0.0<h2>
<ul>
  <li>Automatically specify assets in pubspec.yaml and generate r.g.dart file</li>
  <li>Support for processing image assets (.png, .jpg, .jpeg, .gif, .webp, .icon, .bmp, .wbmp, .svg)</li>
  <li>Support for processing image asset variants</li>
  <li>Support for processing text assets (.txt, .json, .yaml, .xml)</li>
  <li>Support for processing font assets (.ttf, .otf, .ttc)</li>
  <li>Improved robustness</li>
</ul>
    """
}